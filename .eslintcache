[{"C:\\Users\\binap\\Documents\\React\\confusion\\src\\index.js":"1","C:\\Users\\binap\\Documents\\React\\confusion\\src\\reportWebVitals.js":"2","C:\\Users\\binap\\Documents\\React\\confusion\\src\\App.js":"3","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\leaders.js":"13","C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\AboutComponent.js":"15"},{"size":808,"mtime":1608492901881,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":352,"mtime":1608439597553,"results":"19","hashOfConfig":"17"},{"size":2246,"mtime":1608596917005,"results":"20","hashOfConfig":"17"},{"size":1490,"mtime":1608517792705,"results":"21","hashOfConfig":"17"},{"size":2665,"mtime":1609447464985,"results":"22","hashOfConfig":"17"},{"size":2745,"mtime":1608661689222,"results":"23","hashOfConfig":"17"},{"size":2968,"mtime":1608443673757,"results":"24","hashOfConfig":"17"},{"size":2707,"mtime":1608492937550,"results":"25","hashOfConfig":"17"},{"size":1767,"mtime":1608521110514,"results":"26","hashOfConfig":"17"},{"size":10767,"mtime":1610226207846,"results":"27","hashOfConfig":"17"},{"size":4310,"mtime":1608517960731,"results":"28","hashOfConfig":"17"},{"size":2382,"mtime":1608518105264,"results":"29","hashOfConfig":"17"},{"size":465,"mtime":1608518075218,"results":"30","hashOfConfig":"17"},{"size":4411,"mtime":1609447482203,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"nwyqho",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\binap\\Documents\\React\\confusion\\src\\index.js",[],["67","68"],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\App.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\MenuComponent.js",["69","70"],"import React,{} from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n    function RenderMenuItem({ dish, onClick }){\r\n\r\n        return(\r\n            <Card>      \r\n                {/* 'back quat used */}\r\n                <Link to = {`/menu/${dish.id}`} > \r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>                                    \r\n                </Link>\r\n            </Card>\r\n        );\r\n    }  \r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        console.log('Menu Component render is invonked');\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                              \r\n            </div>\r\n        );        \r\n    }\r\n     \r\n// applying router\r\n//    function RenderMenuItem({ dish, onClick}){\r\n//       <Card onClick={() => onClick(dish.id)}>      \r\n    \r\n//Changing into functional component\r\n//class Menu extends Component {\r\n    // componentDidMount(){\r\n    //     console.log('Menu Component componentDidMount invoked')\r\n    // }\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     console.log('Menu Componenet constructor is invonked');\r\n    // }\r\n   \r\n    //render(){\r\n\r\n    //}\r\n//}\r\n\r\nexport default Menu;","C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\DishdetailComponent.js",["71"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n    function RenderDish ({dish}) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" top src={dish.image} atl={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments ({comments}){\r\n        //const RenderComments = (comments) => {\r\n        if (comments != null)\r\n\r\n        return(\r\n            <React.Fragment>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className = \"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key={comment.id}>\r\n                            <p>{comment.comment}</p> \r\n                            <p>--{comment.author}, {formatDate(comment.date)}</p>   \r\n                            </li>\r\n                        );                    \r\n                    })}\r\n                </ul>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n        else\r\n            return(\r\n            <div></div>\r\n            );         \r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.dish != null)\r\n        return(\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n        const option = {year: 'numeric', month: 'short', day: 'numeric' };\r\n        const dateD = new Date(date)\r\n        const newDate = dateD.toLocaleDateString(\"en-US\", option)\r\n        return newDate;\r\n    }\r\n\r\n    export default DishDetail;","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\MainComponent.js",["72","73"],"import { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent'\r\nimport About from './AboutComponent';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { COMMENTS } from '../shared/comments';\r\nimport { PROMOTIONS } from '../shared/promotions';\r\nimport { LEADERS } from '../shared/leaders';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      dishes: DISHES,\r\n      comments: COMMENTS,\r\n      promotions: PROMOTIONS,\r\n      leaders: LEADERS\r\n      //selectedDish: null  \r\n    };\r\n  }\r\n\r\n  render(){\r\n    const HomePage = () =>{\r\n      return(\r\n          <Home \r\n              dish={this.state.dishes.filter((dish) => dish.featured)[0]}\r\n              promotion={this.state.promotions.filter((promo) => promo.featured)[0]}\r\n              leader={this.state.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithID = ({match}) => {\r\n      return(\r\n        <DishDetail dish = {this.state.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        comments = {this.state.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))[0]}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n          <Switch>\r\n            <Route path = \"/home\" component={HomePage} />\r\n            <Route path = \"/aboutus\" component={() => <About leaders={this.state.leaders} />} />\r\n            <Route exact path = \"/menu\" component={() => <Menu dishes={this.state.dishes} />} />\r\n            <Route path = \"/menu/:dishId\" component={DishWithID} />\r\n            <Route exact path = \"/contactus\" component={Contact} />\r\n            <Redirect to = \"/home\" />\r\n          </Switch>        \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n// removed when applying router\r\n//   onDishSelect(dishId) {\r\n//     this.setState({ selectedDish: dishId});\r\n// }\r\n/* moved to HeaderCom file\r\n         <Navbar dark color=\"primary\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n          </div>\r\n        </Navbar>   */\r\n        /*removed when applying router\r\n        <Menu dishes={this.state.dishes} \r\n            onClick={(dishId) => this.onDishSelect(dishId)} />\r\n        <DishDetail \r\n        dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish) [0]} /> */","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\HeaderComponent.js",["74"],"import React, { Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                    <NavbarBrand className =\"mr-auto\" href=\"/\">\r\n                        <img src = \"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                            atl=\"Ristorante Con Fusion\" />\r\n                    </NavbarBrand>\r\n\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span>Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span>About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span>Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className = \"container\">\r\n                    <div className = \"row row-header\">\r\n                        <div className = \"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\ContactComponent.js",["75","76"],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\binap\\Documents\\React\\confusion\\src\\components\\AboutComponent.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":41,"nodeType":"83","messageId":"84","endLine":2,"endColumn":49},{"ruleId":"81","severity":1,"message":"85","line":2,"column":51,"nodeType":"83","messageId":"84","endLine":2,"endColumn":59},{"ruleId":"81","severity":1,"message":"86","line":2,"column":25,"nodeType":"83","messageId":"84","endLine":2,"endColumn":39},{"ruleId":"81","severity":1,"message":"87","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":16},{"ruleId":"81","severity":1,"message":"88","line":5,"column":18,"nodeType":"83","messageId":"84","endLine":5,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":29,"column":25,"nodeType":"91","endLine":30,"endColumn":59},{"ruleId":"92","severity":1,"message":"93","line":56,"column":61,"nodeType":"94","messageId":"95","endLine":56,"endColumn":63},{"ruleId":"96","severity":1,"message":"97","line":119,"column":25,"nodeType":"91","endLine":119,"endColumn":67},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'CardImgOverlay' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]